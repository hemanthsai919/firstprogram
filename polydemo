package com.cg.demo.abs;

// polymorphism - methods with same name have a different functionalities
// compile time polymorphism - method overloading - early binding( stsa
// possible with both static and non static
// with static methods possible in only one class
// with non static methods, possible one class, or super + sub classes
// three types
// 1. different number of arguments 
// 2. different types of arguments
// 3. differnt order of arguments

// runtime polymorphism - method overloading - late binding
// possible only with non static methods
// possible only 
public class PolyDemo {
	public int add(int i, int j) {
		return i + j;
	}

	public int add(int i, int j, int k) {
		return i + j + k;
	}

	public int add(int i, int j, int k, int l) {
		return i + j + k + l;
	}

	public static void main(String[] args) {
		PolyDemo polydemo = new PolyDemo();
		System.out.println(polydemo.add(10, 20));
		System.out.println(polydemo.add(10, 20, 30));
		System.out.println(polydemo.add(10, 20, 30, 40));
	}

}
